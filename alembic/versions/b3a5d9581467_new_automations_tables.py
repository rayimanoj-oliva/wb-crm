"""new automations tables

Revision ID: b3a5d9581467
Revises: d242918cbb54
Create Date: 2025-07-08 23:10:17.899778

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'b3a5d9581467'
down_revision: Union[str, None] = 'd242918cbb54'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('keywords',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('matching_type', postgresql.ENUM('exact', 'fuzzy', 'contains', name='keyword_matching_enum'), autoincrement=False, nullable=False),
    sa.Column('trigger_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='keywords_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('routing_rules',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('type', postgresql.ENUM('user', 'team', name='routing_type_enum'), autoincrement=False, nullable=False),
    sa.Column('material_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('target_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['material_id'], ['reply_materials.id'], name=op.f('routing_rules_material_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('routing_rules_pkey'))
    )
    op.create_table('keyword_replies',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('keyword_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('material_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['keyword_id'], ['keywords.id'], name=op.f('keyword_replies_keyword_id_fkey'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['material_id'], ['reply_materials.id'], name=op.f('keyword_replies_material_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('keyword_replies_pkey'))
    )
    op.create_table('keyword_terms',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('keyword_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('value', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['keyword_id'], ['keywords.id'], name=op.f('keyword_terms_keyword_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('keyword_terms_pkey'))
    )
    op.create_table('holiday_config',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('holiday_mode', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('holiday_config_pkey'))
    )
    op.create_table('working_hours',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('day', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.Column('open', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('intervals', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('working_hours_pkey'))
    )
    op.create_table('reply_materials',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('type', postgresql.ENUM('text', 'image', 'template', 'document', 'video', 'audio', name='reply_material_type_enum'), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('content', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('preview', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='reply_materials_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('default_automation_rules',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('rule_key', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('is_enabled', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('material_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('input_value', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['material_id'], ['reply_materials.id'], name=op.f('default_automation_rules_material_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('default_automation_rules_pkey')),
    sa.UniqueConstraint('rule_key', name=op.f('default_automation_rules_rule_key_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    pass
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('default_automation_rules')
    op.drop_table('reply_materials')
    op.drop_table('working_hours')
    op.drop_table('holiday_config')
    op.drop_table('keyword_terms')
    op.drop_table('keyword_replies')
    op.drop_table('routing_rules')
    op.drop_table('keywords')
    # ### end Alembic commands ###
