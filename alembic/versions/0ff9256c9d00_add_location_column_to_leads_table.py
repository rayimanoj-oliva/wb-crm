"""add location column to leads table

Revision ID: 0ff9256c9d00
Revises: add_leads_manual
Create Date: 2025-10-28 16:16:07.573682

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0ff9256c9d00'
down_revision: Union[str, None] = 'add_leads_manual'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('leads', sa.Column('location', sa.String(length=100), nullable=True))
    # Ensure legacy unique constraint/index handling is resilient across envs
    op.execute(
        """
        DO $$
        BEGIN
            IF EXISTS (
                SELECT 1 FROM pg_constraint 
                WHERE conname = 'leads_zoho_lead_id_key'
            ) THEN
                ALTER TABLE leads DROP CONSTRAINT leads_zoho_lead_id_key;
            END IF;
        END$$;
        """
    )
    op.execute("CREATE UNIQUE INDEX IF NOT EXISTS ix_leads_zoho_lead_id ON leads (zoho_lead_id);")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("DROP INDEX IF EXISTS ix_leads_zoho_lead_id;")
    # Optional: re-create a non-unique index if desired during downgrade
    op.execute("CREATE INDEX IF NOT EXISTS ix_leads_zoho_lead_id ON leads (zoho_lead_id);")
    op.drop_column('leads', 'location')
    # ### end Alembic commands ###
